<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>left_key = vk_left;
right_key = vk_right;
jump_key = vk_up;
attack_key = ord('A');
dive_key = ord('S');
up_key = vk_up;
down_key = vk_down;
confirm_key = ord('A');
cancel_key = vk_escape;

left_button = gp_padl;
right_button = gp_padr;
jump_button = gp_face1;
attack_button = gp_face3;
dive_button = gp_face2;
up_button = gp_padu;
down_button = gp_padd;
confirm_button = gp_face1;
cancel_button = gp_start;

left_held = false;
right_held = false;
jump_pressed = false;
jump_released = false;
attack_pressed = false;
dive_pressed = false;
up_pressed = false;
down_pressed = false;
confirm_pressed = false;
cancel_pressed = false;

gamepad_set_axis_deadzone(0, 0.3);

leftstick_up_held = gamepad_axis_value(0, gp_axislv) &lt; 0;
leftstick_down_held = gamepad_axis_value(0, gp_axislv) &lt; 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var lu = gamepad_axis_value(0, gp_axislv) &lt; 0;
var ld = gamepad_axis_value(0, gp_axislv) &gt; 0;

leftstick_up_pressed = lu &amp;&amp; !leftstick_up_held
leftstick_down_pressed = ld &amp;&amp; !leftstick_down_held;

leftstick_up_held = lu;
leftstick_down_held = ld;

left_held = false;
right_held = false;
jump_pressed = false;
jump_released = false;
attack_pressed = false;
dive_pressed = false;
up_pressed = false;
down_pressed = false;
confirm_pressed = false;
cancel_pressed = false;

left_held = 
    keyboard_check(left_key) || 
    gamepad_button_check(0, left_button) || 
    gamepad_axis_value(0, gp_axislh) &lt; 0;
right_held = 
    keyboard_check(right_key) || 
    gamepad_button_check(0, right_button) || 
    gamepad_axis_value(0, gp_axislh) &gt; 0;
jump_pressed = 
    keyboard_check_pressed(jump_key) || 
    gamepad_button_check_pressed(0, jump_button);
jump_released = 
    keyboard_check_released(jump_key) || 
    gamepad_button_check_released(0, jump_button);
attack_pressed = 
    keyboard_check_pressed(attack_key) || 
    gamepad_button_check_pressed(0, attack_button);
dive_pressed = 
    keyboard_check_pressed(dive_key) || 
    gamepad_button_check_pressed(0, dive_button);
up_pressed = 
    keyboard_check_pressed(up_key) || 
    gamepad_button_check_pressed(0, up_button) ||
    leftstick_up_pressed;
down_pressed = 
    keyboard_check_pressed(down_key) || 
    gamepad_button_check_pressed(0, down_button) ||
    leftstick_down_pressed;
confirm_pressed = 
    keyboard_check_pressed(confirm_key) || 
    gamepad_button_check_pressed(0, confirm_button);
cancel_pressed = 
    keyboard_check_pressed(cancel_key) || 
    gamepad_button_check_pressed(0, cancel_button);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//left_held = false;
//right_held = false;
jump_pressed = false;
jump_released = false;
attack_pressed = false;
dive_pressed = false;
up_pressed = false;
down_pressed = false;
confirm_pressed = false;
cancel_pressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
