<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_grid = scr_create_world();

room_x = 4;
room_y = 0;
ability = 0;

scr_load();

hp = 6 - ability;

base_state = 0;
ability_state = 1;

state = base_state;

can_press = 0;

desc_list = ds_list_create();
ds_list_add(desc_list,
    "You grew claws! Press A to attack enemies with them.",
    "You grew wings! Press Up in the air to flap for extra height.",
    "You grew a tail! Press S in the air to perform a tail dive attack.",
    "You grew hooves! Walk in one direction for a short time to start running. While running you will kill enemies.",
    "You grew horns! Press S on the ground to perform a horn launch attack."
);

music_list = ds_list_create();
ds_list_add(music_list, mus_track1, mus_track2, mus_track3, mus_track4, mus_track5);

for (var i = 0; i &lt; ds_list_size(music_list); i++) {
    audio_play_sound(ds_list_find_value(music_list, i), 0, true);
}

do_stuff = true;

room_goto(ds_grid_get(room_grid, room_x, room_y));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_press &gt; 0) {
    can_press --;
}

if (state == ability_state &amp;&amp; can_press &lt;= 0 &amp;&amp; keyboard_check_pressed(vk_anykey)) {
    state = base_state;
}

var goto = false;
var p_y = obj_player.y + 16;

if (obj_player.x &gt; room_width) {
    room_x++;
    obj_player.x -= room_width;
    goto = true;
}
else if (obj_player.x &lt; 0) {
    room_x--;
    obj_player.x += room_width;
    goto = true;
}
if (p_y &gt; room_height) {
    room_y++;
    p_y -= room_height;
    goto = true;
}
else if (p_y &lt; 0) {
    room_y--;
    p_y += room_height;
    obj_player.y_speed = -5;
    goto = true;
}

obj_player.y = p_y - 16;

if (keyboard_check_pressed(vk_escape)) {
    audio_play_sound(snd_cancel, 0, false);
    goto = false;
    persistent = false;
    obj_player.persistent = false;
    room_goto(rm_title);
}
else if (hp &lt;= 0) {
    audio_play_sound(snd_die, 0, false);
    goto = false;
    persistent = false;
    obj_player.persistent = false;
    room_goto(rm_game_over);
}

if (goto) {
    room_goto(ds_grid_get(room_grid, room_x, room_y));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!persistent) {
    for (var i = 0; i &lt; ds_list_size(music_list); i++) {
        audio_stop_sound(ds_list_find_value(music_list, i));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (do_stuff) {
    obj_save.can_save = false;
    instance_create(obj_save.x, obj_save.y, obj_player);
    do_stuff = false;
    scr_save();
}

instance_create(0, 0, obj_background);

for (var i = 0; i &lt; ds_list_size(music_list); i++) {
    var music = ds_list_find_value(music_list, i);
    if (i == room_y) {
        audio_sound_gain(music, 1, 0);
    } else {
        audio_sound_gain(music, 0, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var start_x = room_width / 2 - 32 * 3 + 16;

for (var i = 0; i &lt; 6; i++) {
    var frame = 0;
    if (hp &lt; i + 1) {
        frame = 1;
    }
    if (i &gt;= (6 - ability)) {
        frame = 2;
    }
    draw_sprite(spr_heart, frame, start_x + 32 * i, 16);
}

if (state == ability_state) {
    draw_set_alpha(0.5);
    draw_set_color(c_black);
    draw_rectangle(0, 0, room_width, room_height, false);
    draw_set_alpha(1);
    
    draw_sprite(spr_splash, 0, 0, 0);
    
    draw_set_color(c_white);
    draw_set_font(fnt_ability);
    
    draw_text(room_width / 2, room_height / 3, "Corruption#Increased");
    
    draw_set_font(fnt_description);
    
    draw_text_ext(room_width / 2, room_height * (2 / 3), ds_list_find_value(desc_list, ability - 1), -1, 250);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
